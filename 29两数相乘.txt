#include <bits/stdc++.h>

using namespace std;

class Solution {
public:
	int divide(int dividend, int divisor) {
		if (dividend == INT_MIN && divisor == -1)	return INT_MAX;

		if (divisor == 0)	return -1;

		if (divisor == INT_MIN && dividend != INT_MIN)	return 0;

		if (divisor == dividend)	return 1;

		int ans = 0;

		int cur_mul = 1;

		int div_cur = (divisor>0 ? divisor : -divisor), div_init = (divisor>0 ? divisor : -divisor);

		if (dividend == INT_MIN){
			return divide(dividend + div_init, divisor) - divide(div_init, divisor);
		}

		int remain = (dividend>0?dividend:-dividend);

		int flag = ((dividend^divisor) < 0);

		while (remain > div_init) {
			ans += cur_mul;
			remain -= div_cur;

			if (INT_MAX - div_cur > div_cur) {
				div_cur += div_cur;
				cur_mul += cur_mul;
			}

			if (remain < div_cur) {
				div_cur = div_init;
				cur_mul = 1;
			}
		}

		return flag>0?-ans:ans;
	}
};